<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
	<help>
		USE:
			The diffs are ordered by datamodel version number.
			The script can be run in a top down fashion and is
			expected to not failor overwrite old data
		
		EXPECT:
			- "use business-database-name;" was called prior to
			   calling this script
	</help>
	<diff>
		<version>2.1.8</version>
		<author>Chuyen Nguyen</author>
		<date>JAN 14rd 2011</date>
		<description>
			Create inventory tables
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS inventory_store (id integer not null auto_increment, name varchar(255), created_on datetime, created_by varchar(255), user_id integer, retired bit, code varchar(255), is_drug integer, parent_id integer, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_drug (id integer not null auto_increment, name varchar(255), unit_id integer, category_id integer, drug_id integer, attribute integer, consumption integer, reorder_qty integer, created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_drug_category (id integer not null auto_increment, name varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_drug_formulation (id integer not null auto_increment, name varchar(255), dozage varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_drug_formulations (drug_id integer not null, formulation_id integer not null, primary key (drug_id, formulation_id));
			CREATE TABLE IF NOT EXISTS inventory_drug_unit (id integer not null auto_increment, name varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_item (id integer not null auto_increment, name varchar(255), unit_id integer, category_id integer, sub_category_id integer, attribute integer, consumption integer, reorder_qty integer, created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_item_category (id integer not null auto_increment, name varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_item_specification (id integer not null auto_increment, name varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_item_specifications (item_id integer not null, specification_id integer not null, primary key (item_id, specification_id));
			CREATE TABLE IF NOT EXISTS inventory_item_sub_category (id integer not null auto_increment, name varchar(255), code varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_item_unit (id integer not null auto_increment, name varchar(255), description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug (id integer not null auto_increment, store_id integer, drug_id integer, formulation_id integer, current_quantity bigint, receipt_quantity bigint, issue_quantity bigint, status_indent integer, reorder_qty integer, opening_balance bigint, closing_balance bigint, status integer, created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_indent (id integer not null auto_increment, store_id integer, transaction_id integer, name varchar(255), created_on datetime, sub_store_status integer, main_store_status integer, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_indent_detail (id integer not null auto_increment, indent_id integer, drug_id integer, formulation_id integer, quantity integer, main_store_transfer integer, created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_patient (id integer not null auto_increment, store_id integer, patient_id integer, name varchar(255), prescription varchar(255), identifier varchar(255), created_by varchar(255), created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_patient_detail (id integer not null auto_increment, store_drug_patient_id integer, transaction_detail_id integer, quantity integer, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_transaction (id integer not null auto_increment, store_id integer, type_transaction integer, status integer, description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_transaction_detail (id integer not null auto_increment, transaction_id integer, drug_id integer, formulation_id integer, quantity integer, current_quantity integer, issue_quantity integer, unit_price decimal(19,2), VAT decimal(19,2), total_price decimal(19,2), batch_no varchar(255), company_name varchar(255), date_manufacture datetime, date_expiry datetime, receipt_date datetime, created_on datetime, opening_balance bigint, closing_balance bigint, parent_id integer, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item (id integer not null auto_increment, store_id integer, item_id integer, specification_id integer, current_quantity bigint, receipt_quantity bigint, issue_quantity bigint, status_indent integer, reorder_qty integer, opening_balance bigint, closing_balance bigint, status integer, created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item_account (id integer not null auto_increment, store_id integer, name varchar(255), created_by varchar(255), created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item_account_detail (id integer not null auto_increment, item_account_id integer, transaction_detail_id integer, quantity integer, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item_indent (id integer not null auto_increment, store_id integer, transaction_id integer, name varchar(255), created_on datetime, sub_store_status integer, main_store_status integer, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item_indent_detail (id integer not null auto_increment, indent_id integer, item_id integer, specification_id integer, quantity integer, main_store_transfer integer, created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item_transaction (id integer not null auto_increment, store_id integer, type_transaction integer, status integer, description varchar(500), created_on datetime, created_by varchar(255), primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_item_transaction_detail (id integer not null auto_increment, transaction_id integer, item_id integer, specification_id integer, quantity integer, current_quantity integer, issue_quantity integer, unit_price decimal(19,2), VAT decimal(19,2), total_price decimal(19,2), company_name varchar(255), date_manufacture datetime, receipt_date datetime, created_on datetime, opening_balance bigint, closing_balance bigint, parent_id integer, primary key (id));
			ALTER  TABLE inventory_store add index fk_inventorystore_user (user_id), add constraint fk_inventorystore_user foreign key (user_id) references users (user_id);

		</sql>
	</diff>
	<diff>
		<version>2.1.9</version>
		<author>Chuyen Nguyen</author>
		<date>JAN 19rd 2011</date>
		<description>
			Update inventory tables
		</description>
		<sql>
			ALTER TABLE inventory_item_sub_category ADD category_id integer;
		</sql>
	</diff>
	<diff>
		<version>2.2.0</version>
		<author>Chuyen Nguyen</author>
		<date>JAN 19rd 2011</date>
		<description>
			Update VAT columns because we change VAT to % calculator
		</description>
		<sql>
			ALTER TABLE inventory_store_item_transaction_detail MODIFY VAT integer;
			ALTER TABLE inventory_store_drug_transaction_detail MODIFY VAT integer;
		</sql>
	</diff>
	<diff>
		<version>2.2.1</version>
		<author>Chuyen Nguyen</author>
		<date>JAN 25rd 2011</date>
		<description>
			Change inventory_store using user in store to use role
		</description>
		<sql>
			ALTER TABLE inventory_store drop foreign key fk_inventorystore_user;
			ALTER TABLE inventory_store  CHANGE user_id role varchar(255);
		</sql>
	</diff>
	<diff>
		<version>2.2.2</version>
		<author>Chuyen Nguyen</author>
		<date>Match 4rd 2011</date>
		<description>
			remove role data from inventory_store
		</description>
		<sql>
			UPDATE inventory_store SET role = null WHERE role IS NOT NULL;
		</sql>
	</diff>
	<diff>
		<version>2.2.3</version>
		<author>Chuyen Nguyen</author>
		<date>Match 9rd 2011</date>
		<description>
			Add table of store issue drug to account
		</description>
		<sql>
			CREATE TABLE IF NOT EXISTS inventory_store_drug_account (id integer not null auto_increment, store_id integer, name varchar(255), created_by varchar(255), created_on datetime, primary key (id));
			CREATE TABLE IF NOT EXISTS inventory_store_drug_account_detail (id integer not null auto_increment, drug_account_id integer, transaction_detail_id integer, quantity integer, primary key (id));
			
		</sql>
	</diff>
	<diff>
		<version>2.2.4</version>
		<author>Chuyen Nguyen</author>
		<date>April 14rd 2011</date>
		<description>
			Change type VAT to decimal(19,2)
		</description>
		<sql>
			ALTER TABLE inventory_store_item_transaction_detail MODIFY VAT decimal(19,2);
			ALTER TABLE inventory_store_drug_transaction_detail MODIFY VAT decimal(19,2);
		</sql>
	</diff>
	<diff>
		<version>2.2.5</version>
		<author>ghanshyam</author>
		<date>December 27th 2017</date>
		<description>
			add column expire_status
		</description>
		<sql>
			ALTER TABLE inventory_store_drug_transaction_detail ADD COLUMN expire_status  TINYINT(1) DEFAULT 0;
		</sql>
	</diff>
		<diff>
		<version>2.2.6</version>
		<author>Ambika Tripathi</author>
		<date>July 24,2017</date>
		<description>
			ALTER  TABLE inventory_store_drug_transaction and inventory_store_item_transaction
		</description>
		<sql>
			ALTER  TABLE inventory_store_drug_transaction add COLUMN `patient_category` varchar(255) default NULL;
		</sql>
	</diff>
			<diff>
		<version>2.2.7</version>
		<author>Ambika</author>
		<date>July 24 2017</date>
		<description>
			Alter inventory_store_drug_transaction_detail and add cost to patient
		</description>
		<sql>
	ALTER TABLE inventory_store_drug_transaction_detail  ADD COLUMN  `cost_to_patient` decimal(19,2);
	</sql>
	</diff>
<diff>
		<version>2.2.8</version>
		<author>ghanshyan</author>
		<date>August 31st 2017</date>
		<description>
			ALTER inventory_store_drug_transaction_detail
		</description>
		<sql>
		ALTER TABLE inventory_store_drug_transaction_detail ADD COLUMN(total_amount float(11,2),waiver_percetage float(11,2),waiver_amount float(11,2),amount_payable decimal(11,2),amount_given int(11),amount_returned int(11));
		</sql>
	</diff>
	
	<diff>
		<version>2.2.9</version>
		<author>ghanshyan</author>
		<date>27th Nov 2017</date>
		<description>
			ALTER inventory_store_drug_transaction_detail
		</description>
		<sql>
		ALTER TABLE inventory_store_drug_transaction_detail ADD COLUMN(comments varchar(255) default NULL);
		</sql>
	</diff>
		<diff>
		<version>2.3.0</version>
		<author>ambika</author>
		<date>27th Nov 2017</date>
		<description>
			ALTER inventory_store_drug_transaction_detail
		</description>
		<sql>
		ALTER TABLE inventory_store_drug_transaction_detail ADD COLUMN(amount_credit decimal(11,2));
		</sql>
	</diff>
	
			<diff>
		<version>2.3.1</version>
		<author>ambika</author>
		<date>20th Dec 2017</date>
		<description>
			ALTER inventory_store_drug_transaction_detail
		</description>
		<sql>
		ALTER TABLE inventory_store_drug_transaction_detail ADD COLUMN(Rate decimal(11,2), cgst decimal(11,2),cgst_amount decimal(11,2), sgst decimal(11,2),sgst_amount decimal(11,2));
		</sql>
	</diff>
	
		<diff>
		<version>2.3.2</version>
		<author>ambika</author>
		<date>20th Dec 2017</date>
		<description>
			ALTER inventory_store_drug_transaction
		</description>
		<sql>
		ALTER TABLE inventory_store_drug_transaction ADD COLUMN( receipt_No varchar(500), bill_Amount decimal(11,2));
		</sql>
	</diff>
	
	
			<diff>
		<version>2.3.3</version>
		<author>ambika</author>
		<date>27th Dec 2017</date>
		<description>
			ALTER inventory_store_drug_transaction_detail
		</description>
		<sql>
		ALTER TABLE inventory_store_drug_transaction_detail
CHANGE  unit_price  mrp_price DECIMAL(19,2);
		ALTER TABLE inventory_store_drug_transaction_detail ADD COLUMN( unit_price DECIMAL(19,2),total_amount_after_gst DECIMAL(19,2));

		</sql>
	</diff>
</sqldiff>
